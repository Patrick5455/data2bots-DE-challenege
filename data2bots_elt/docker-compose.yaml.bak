version: '3.4'

x-common: &common
  image: apache/airflow:2.3.0
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock
    - ./common:/opt/airflow/common
    - ./pipeline:/opt/airflow/pipeline
    - ./dbt-dags:/opt/airflow/dbt-dags
    - ./requirements.txt:/requirements.txt  # Mount requirements.txt file
    - ./requirements.txt:/sources/requirements.txt  # Add this line
  command: /bin/bash -c "pip3 install -r /requirements.txt && \
           pip3 install --user -r /sources/requirements.txt \
           && airflow $CMD"

x-depends-on: &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins /sources/common /sources/pipeline /sources/dbt-dags
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins,common,pipeline,dbt-dags}
        cp -r /opt/airflow/common/* /sources/common
        cp -r /opt/airflow/pipeline/* /sources/pipeline
        cp -r /opt/airflow/dbt-dags/* /sources/dbt-dags
        cp /requirements.txt /opt/airflow
        cd /opt/airflow && pip3 install --user -r /sources/requirements.txt
        exec /entrypoint airflow version

